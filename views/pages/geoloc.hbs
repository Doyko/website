{{#*inline "nav"}}
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link js-scroll-trigger" href="#presentation">Présentation</a>
        </li>
        <li class="nav-item">
            <a class="nav-link js-scroll-trigger" href="#fonctionnement">Fonctionnement</a>
        </li>
        <li class="nav-item">
            <a class="nav-link js-scroll-trigger" href="#itinéraire">Itinéraire</a>
        </li>
        <li class="nav-item">
            <a class="nav-link js-scroll-trigger" href="#liens">Liens</a>
        </li>
        <li class="nav-item">
            <a class="nav-link js-scroll-trigger" href="/#projets">Retour aux projets</a>
        </li>
    </ul>
{{/inline}}
{{#*inline "content"}}
    <div class="container-fluid p-0">

        <section class="resume-section p-3 p-lg-5 d-flex align-items-center" id="presentation">
            <div class="w-100">
                <h2 class="mb-0">géolocalisation indoor par QR code</h2>
                <div class="subheading mb-5">
                    Application web en Node JS
                </div>
                <img src="resources/pic_geoloc.png" style="width:70%;height:auto" class="rounded mx-auto d-block" alt="resources/pic_geoloc.png">
                <p class="lead mb-5" style="text-align:justify">
                    L'objectif de ce projet est de proposer une application web pour permettre aux utilisateurs de se localiser dans l'espace, ce qui peut être très utile lors de salons d'exposition ou bien dans de grands bâtiments.<br>
                    L'utilisateur va scanner un QR code et l'application lui indiquera la position sur une carte. Il pourra alors saisir une destination pour voir le trajet depuis sa position actuelle.<br>
                    L'application web est dévelopée en NodeJS et utilise des scripts Python pour la recherche de chemins.
                </p>
            </div>
        </section>

        <hr class="m-0">

        <section class="resume-section p-3 p-lg-5 d-flex justify-content-center" id="fonctionnement">
            <div class="w-100">
                <h2 class="mb-5">Fonctionnement</h2>
                <img src="resources/pic_all_nodes.png" style="width:60%;height:auto" class="rounded mx-auto d-block mb-2" alt="resources/pic_all_nodes.png">
                <p style="text-align:justify">
                    <img src="resources/pic_QR_code.png" style="width:20%;height:auto" class="img-fluid float-left mr-2" alt="resources/pic_QR_code.png">
                    Afin de faire fonctionner l'application, il faut au préalable placer sur une carte des noeuds à chacun des points d'intérets, puis aux embranchements. Les liens modélisent les chemins entre les noeuds. Dans l'exemple plus haut qui est un étage d'un établissement scolaire, il y a un noeud par salle ainsi que dans les couloirs afin de les relier.<br><br>
                    Chaque noeud possède son propre identifiant sous la forme d'une chaîne de caractères. Lorsqu'un utilisateur va scanner un QR code, il sera diriger vers une application web en passant cette chaîne de caractères en paramètre afin que l'application puisse récupérer l'identifiant du noeud où se trouve l'utilisateur. L'identifiant est envoyé à l'application grâce à la méthode HTTP GET.<br><br>
                    En réponse, l'application affiche à l'utilisateur la carte du lieu avec un point indiquant l'endroit où il se trouve.
                </p>
            </div>
        </section>

        <hr class="m-0">

        <section class="resume-section p-3 p-lg-5 d-flex justify-content-center" id="itinéraire">
            <div class="w-100">
                <h2 class="mb-5">Itinéraire</h2>
                <img src="resources/pic_geoloc.png" style="width:60%;height:auto" class="rounded mx-auto d-block mb-2" alt="resources/pic_geoloc.png">
                <p style="text-align:justify">
                    Une fois que l'utilisateur connait sa position, il peut demander un initéraire à travers le lieu. Pour cela il y a une liste déroulante avec tous les points d'intérets (par exemple la liste des salles) dans laquelle l'utilisateurs peut en sélectionner un. Cela enverra une nouvelle requête au serveur avec cette fois-ci deux paramètres, le position de départ et la destination souhaitée. L'application va calculer le chemin le plus court à travers le lieu pour rejoindre la destination.<br><br>
                    Le calcul du chemin le plus court se fait grace à l'algorithme de Dijkstra. En plaçant les noeuds sur la cartes ainsi que leurs liens, on connait la distance entre eux, ce qui nous permet donc d'appliquer l'algorithme de Dijkstra sur le graphe ainsi construit.<br><br>
                    Le programme gère également la présence de destinations multiples, par exemple si l'utilisateur recherche un point d'eau et qu'il y en a plusieurs sur la carte, l'application lui affichera les trajets les plus courts vers chacun des points d'eau.
                </p>
            </div>
        </section>

        <hr class="m-0">

        <section class="resume-section p-3 p-lg-5 d-flex align-items-center" id="liens">
            <div class="w-100">
                <h2 class="mb-5">Liens</h2>
                <ul class="fa-ul mb-0">
                    <li>
                        <a href="https://github.com/Doyko/QR-geoloc">
                            Code source du projet
                            <i class="fab fa-github"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </section>
    </div>
{{/inline}}
{{~> (parent)~}}
